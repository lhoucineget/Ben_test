}
moyp(v,w)
x = 2
x = 2 + 5
y = x + 5
is.numeric(x)
y ='bonjour'
is.numeric(y)
typeof(y)
is.character(y)
is.logical(2 < 1)
rm(y)
#Comment impodter une Data dans R
library(readxl)
Data=read_excel("Data.xlsx")
View(Data)
Etud1=Data$C1
calcule_variance=function(x,m){
Sigma2=0
n=lenght(x)
for (i in 1:n){
Sigma2=Sigma2+(x(i)-m)^2/n
}
cat('la variance estimée est', Sigma2)
}
x=c(12,25,13,16,18,20)
m=15
calcule_variance(x,m)
calcule_variance=function(x,m){
Sigma2=0
n=length(x)
for (i in 1:n){
Sigma2=Sigma2+(x(i)-m)^2/n
}
cat('la variance estimée est', Sigma2)
}
x=c(12,25,13,16,18,20)
m=15
calcule_variance(x,m)
x=c(12,25,13,16,18,20)
m=15
x
calcule_variance(x,m)
calcule_variance=function(x,m){
Sigma2=0
n=length(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-m)^2/n
}
cat('la variance estimée est', Sigma2)
}
x=c(12,25,13,16,18,20)
m=15
calcule_variance(x,m)
calcule_variance1=function(x,m){
Sigma2=0
n=length(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-m)^2/n
}
cat('la variance estimée est', Sigma2)
}
x=c(12,25,13,16,18,20)
m=15
calcule_variance1(x,m)
calcule_variance2=function(x){
Sigma2=0
n=length(x)
xbar=mean(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-xbar)^2/n
}
cat('la variance estimée est', Sigma2)
}
calcule_variance2(x)
x = 2
x = 2 + 5
y = x + 5
is.numeric(x)
y ='bonjour'
is.numeric(y)
typeof(y)
is.character(y)
is.logical(2 < 1)
rm(y)
#Vecteur
v = c(1, 2, 3, 5, 4)
v2 = rep(5, times = 8)
v3 = seq(from = 1, to = 5, by = 0.2)
v4 = c(2, 5,NA, 8, 12) # Les données manquantes sont avec le code NA (Not Available).
length(v1)
length(v1)
v1 = 1 : 24
length(v1)
#Opérations sur les vecteurs
v1*10
log(v1)
v1[1:3]
v1[-2]
v1[c(1, 3)]
#Vecteur
v = c(10, 20, 30, 50, 40)
v[1:3]
v[-2]
v[c(1, 3)]
x = 2
x = 2 + 5
x = 2
x = 2 + 5
y = x + 5
is.numeric(x)
y ='bonjour'
is.numeric(y)
is.numeric(y)
typeof(y)
is.character(y)
is.logical(2 < 1)
rm(y)
rm(list = ls())
#Dans R je suis quoi avec un # au début?
#Vecteur
v = c(10, 20, 30, 50, 40)
v1 = 1 : 24
v2 = rep(5, times = 8)
v3 = seq(from = 1, to = 5, by = 0.2)
v4 = c(2, 5,NA, 8, 12) # Les données manquantes sont avec le code NA (Not Available).
length(v1)
#Opérations sur les vecteurs
v1*10
log(v1)
v[1:3]
v[-2]
v[c(1, 3)]
mean(v3) # La moyenne
var(v3) # La variance
sd(v3) # l’écart type
#La densité de la loi normale standard sur [-10,10]
x = seq(-10, 10, len = 100)
y = dnorm(x, mean = 1, sd = 2)
#y=dt(x,20)
plot(x, y, type = 'l', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
#Matrices
m1 = matrix(1:9, ncol = 3)
m1
m11 = matrix(1:9, ncol = 3, byrow = TRUE)
m11
m2 = matrix(1:9, ncol = 3, byrow = FALSE)
m2
m3 = m1
typeof(m3)
m3[2, 3] = "mot"
typeof(m3)
B = cbind(c(1, 2, 3), c(1, 2, 5), c(4, 5, 6))
t(B)
B*(B)
B%*%t(B)
C = solve(B)
B%*%C
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
Nomfonction(10, 10)
moy=function(v){
z=mean(v)
if (z >= 10)
{
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
v=c(12,15,16,19,20)
moy(v)
moyp=function(v,w){
z=t(v)%*%w
if (z >= 10)
{
cat('Félicitation tu as validé avec un', z, 'la variance est', var(v))
}
else {
cat('Malheureusement tu as un :', z, 'la variance est', var(v))
}
}
w=c(0.3,0.1,0.0,0.2,0.2)
moyp(v,w)
calcule_variance1=function(x,m){
Sigma2=0
n=length(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-m)^2/n
}
cat('la variance estimée est', Sigma2)
}
x=c(12,25,13,16,18,20)
m=15
calcule_variance1(x,m)
calcule_variance2=function(x){
Sigma2=0
n=length(x)
xbar=mean(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-xbar)^2/n
}
cat('la variance estimée est', Sigma2)
}
calcule_variance2(x)
library(readxl)
Data=read_excel("Data.xlsx")
View(Data)
Etud1=Data$C1
Data=read_excel("Data.xlsx")
length(v1)
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
print('Félicitation tu as validé avec un', z)
}
else {
print('Malheureusement tu as un :', z)
}
}
Nomfonction(10, 10)
moy=function(v){
z=mean(v)
if (z >= 10)
{
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
print('Félicitation tu as validé avec un', z)
}
else {
print('Malheureusement tu as un :', z)
}
}
Nomfonction(10, 10)
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
Nomfonction(10, 10)
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
cat("Félicitation tu as validé avec un", z)
}
else {
cat("Malheureusement tu as un :", z)
}
}
Nomfonction(10, 10)
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
print("Félicitation tu as validé avec un", z)
}
else {
print("Malheureusement tu as un :", z)
}
}
Nomfonction(10, 10)
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
Nomfonction(10, 10)
moy=function(v){
z=mean(v)
if (z >= 10)
{
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
v=c(12,15,16,19,20)
moy(v)
Nomfonction = function(x, y) {
z = (x + y) / 2
if (z >= 10) {
cat('Félicitation tu as validé avec un', z)
}
else {
cat('Malheureusement tu as un :', z)
}
}
x = 2
#Vecteur
v = c(10, 20, 30, 50, 40)
v
v1 = 1 : 24
v1 = 1 : 24
v2 = rep(5, times = 8)
v3 = seq(from = 1, to = 5, by = 0.2)
v4 = c(2, 5,NA, 8, 12) # Les données manquantes sont avec le code NA (Not Available).
length(v1)
#y=dt(x,20)
plot(x, y, type = 'l', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
#La densité de la loi normale standard sur [-10,10]
x = seq(-10, 10, len = 100)
y = dnorm(x, mean = 1, sd = 2)
#y=dt(x,20)
plot(x, y, type = 'l', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
plot(x, y, type = '.', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
#y=dt(x,20)
plot(x, y, type = 'p', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
y = cnorm(x, mean = 1, sd = 2)
z = pnorm(x, mean = 1, sd = 2)
plot(x, z, type = 'p', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
plot(x, z, type = 'p', xlab = 'x', ylab = 'répartition', main = 'Densité de Loi NS')
plot(x, z, type = 'p', xlab = 'x', ylab = 'répartition', main = 'Densité de Loi NS')
#Matrices
m1 = matrix(1:9, ncol = 3)
plot(x, z, type = 'p', xlab = 'x', ylab = 'répartition', main = 'Densité de Loi NS')
plot(x, z, type = 'p', xlab = 'x', ylab = 'répartition', main = 'Densité de Loi NS')
plot(x, z, type = 'p', xlab = 'x', ylab = 'Répartition', main = 'Répartition de Loi NS')
plot(x, z, type = 'p', xlab = 'x', ylab = 'Répartition', main = 'Répartition de Loi NS')
qchisq(0.975, df = 99)  # ≈ 124.34
qchisq(0.025, df = 99)  # ≈ 77.05
calcule_variance2=function(x){
Sigma2=0
n=length(x)
xbar=mean(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-xbar)^2/n
}
cat('la variance estimée est', Sigma2)
}
x=c(28.3, 26.4,27,22.5,23.5,29.1,26.8,26.7,30.9)
x=c(28.3, 26.4,27,22.5,23.5,29.1,26.8,26.7,30.9)
calcule_variance2(x)
calcule_variance2=function(x){
Sigma2=0
n=length(x)
xbar=mean(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-xbar)^2/(n-1)
}
cat('la variance estimée est', Sigma2)
}
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2)
s=calcule_variance2(x)
cat('[,',xbar-t*s/n)
}
x=c(28.3, 26.4,27,22.5,23.5,29.1,26.8,26.7,30.9)
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance2(x)
cat('[,',xbar-t*s/n)
}
intemyon(x,0.05)
calcule_variance22=function(x){
Sigma2=0
n=length(x)
xbar=mean(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-xbar)^2/(n-1)
}
return(Sigma2)
}
calcule_variance22(x)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[,',xbar-t*s/n)
}
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[,', xbar-t*s/n)
}
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[,', xbar-t*s/n)
}
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[', xbar-t*s/n)
}
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)  # ⛔️ nom de fonction inconnu / non standard
cat('[', xbar-t*s/n , xbar+t*s/n ']')  # ⛔️ erreur de formule + erreur de syntaxe
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)  # ⛔️ nom de fonction inconnu / non standard
cat('[', xbar-t*s/n , xbar+t*s/n ']')  # ⛔️ erreur de formule + erreur de syntaxe
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[', xbar-t*s/n , xbar+t*s/n, ']')
}
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[', xbar-t*s/n , xbar+t*s/n, ']')
}
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[', xbar-t*s/n, ',', xbar+t*s/n, ']')
}
calcule_variance22(x)
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[', xbar-t*s/n, ';', xbar+t*s/n, ']')
}
intemyon(x,0.05)
intemyon=function(x,alpha){
n=length(x)
xbar=mean(x)
t=qt(1-alpha/2,n)
s=calcule_variance22(x)
cat('[',xbar-t*s/n, ';', xbar+t*s/n,']')
}
intemyon(x,0.05)
x=c(28.3, 26.4,27,22.5,23.5,29.1,26.8,26.7,30.9,3.9)
intemyon(x,0.05)
x=c(28.3, 26.4,27,22.5,23.5,29.1,26.8,26.7,30.9,30.9)
intemyon(x,0.05)
x = 2
x = 2 + 5
y = x + 5
is.numeric(x)
y ='bonjour'
is.numeric(y)
typeof(y)
is.character(y)
is.logical(2 < 1)
x = 2
x = 2 + 5
y = x + 5
is.numeric(x)
y ='bonjour'
is.numeric(y)
typeof(y)
is.character(y)
is.logical(2 < 1)
x = seq(-10, 10, len = 100)
y = dnorm(x, mean = 1, sd = 2)
#y=dt(x,20)
plot(x, y, type = 'p', xlab = 'x', ylab = 'densité', main = 'Densité de Loi NS')
calcule_variance2=function(x){
Sigma2=0
n=length(x)
xbar=mean(x)
for (i in 1:n){
Sigma2=Sigma2+(x[i]-xbar)^2/(n-1)
}
cat("la variance estimée est", Sigma2)
}
x=c(12,25,13,16,18,20)
calcule_variance2(x)
